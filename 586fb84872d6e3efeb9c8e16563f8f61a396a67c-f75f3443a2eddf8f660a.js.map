{"version":3,"sources":["webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/utils/columnSizeMatcher.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/utils/getReadableColor.js","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Category.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Title.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.Excerpt.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Body.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/AvatarSimple/AvatarSimple.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Author.Avatar.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Author.Name.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/TextList/TextList.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.Info.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Footer.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.Icon.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.Image.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Media.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.Base.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/Card/Card.jsx","webpack://@elegantstack/gatsby-starter-flexiblog-minimal-v2/../packages/flow-ui/flow-ui-components/src/MemphisPattern/MemphisPattern.jsx"],"names":["columns","Array","isArray","length","sizes","1","2","3","4","5","flexBasis","hex","indexOf","slice","parseInt","console","log","styles","mb","variant","category","omitCategory","slug","css","sx","rv","as","Link","to","color","bg","getReadableColor","name","title","link","linkProps","href","target","rel","GLink","flex","excerpt","omitExcerpt","context","useThemeUI","responsiveVariant","visibility","reduce","mobileVisibility","get","theme","display","flexDirection","justifyContent","children","omitBody","props","imageWrapperSimple","verticalAlign","borderRadius","borderStyle","borderWidth","borderColor","overFlow","opacity","mr","img","AvatarSimple","avatar","size","alt","image","getImageVariant","defaultProps","omitAuthor","author","thumbnail","aria-label","pr","wrapper","separator","content","nowrap","overflow","textOverflow","whiteSpace","TextList","date","timeToRead","alignItems","postInfo","flexWrap","omitFooter","iconBox","height","iconAndText","position","fontWeight","zIndex","px","lineHeight","svg","pb","pattern","thumbnailText","icon","src","MemphisPattern","CardMediaImage","loading","userSelect","textAlign","CardMedia","imageVariant","omitMedia","mediaType","imageVar","onMouseOver","className","columnSizeMatcher","onFocus","Card","variantGroup","aside","backgroundImage","backgroundSize","top","left"],"mappings":"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","file":"586fb84872d6e3efeb9c8e16563f8f61a396a67c-f75f3443a2eddf8f660a.js","sourcesContent":["//Responsive flex sizes based on theme-ui sizes (theme.sizes)\r\nexport default columns => {\r\n  if (!Array.isArray(columns) || columns.length <= 0) return\r\n\r\n  let columnSizes\r\n\r\n  const sizes = {\r\n    1: `full`,\r\n    2: `1/2`,\r\n    3: `1/3`,\r\n    4: `1/4`,\r\n    5: `1/5`\r\n  }\r\n  columnSizes = {\r\n    flexBasis: [\r\n      sizes[columns[0]],\r\n      sizes[columns[1]],\r\n      sizes[columns[2]],\r\n      sizes[columns[3]]\r\n    ]\r\n  }\r\n\r\n  return columnSizes\r\n}\r\n","const getReadableColor = hex => {\r\n  if (hex.indexOf('#') === 0) {\r\n    hex = hex.slice(1)\r\n  }\r\n  // convert 3-digit hex to 6-digits.\r\n  if (hex.length === 3) {\r\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\r\n  }\r\n  if (hex.length !== 6) {\r\n    console.log('Invalid HEX color.')\r\n    return\r\n  }\r\n  var r = parseInt(hex.slice(0, 2), 16),\r\n    g = parseInt(hex.slice(2, 4), 16),\r\n    b = parseInt(hex.slice(4, 6), 16)\r\n\r\n  return r * 0.299 + g * 0.587 + b * 0.114 > 186 ? '#2d3748' : '#FFFFFF'\r\n}\r\n\r\nexport default getReadableColor\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Box, Badge, css } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport getReadableColor from '@components/utils/getReadableColor'\r\n\r\nconst styles = {\r\n  badge: {\r\n    mb: 3\r\n  }\r\n}\r\n\r\nconst CardBodyCategory = ({ variant, category, omitCategory }) =>\r\n  !omitCategory && category && category.slug ? (\r\n    <Box css={css(styles.badge)} sx={{ variant: rv(variant, 'category') }}>\r\n      <Badge\r\n        variant='tag'\r\n        as={Link}\r\n        to={category.slug}\r\n        sx={\r\n          category.color && {\r\n            bg: category.color,\r\n            color: getReadableColor(category.color)\r\n          }\r\n        }\r\n      >\r\n        {category.name}\r\n      </Badge>\r\n    </Box>\r\n  ) : null\r\n\r\nexport default CardBodyCategory\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Heading } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardBodyTitle = ({ variant, title, slug, link }) => {\r\n  const linkProps = link\r\n    ? {\r\n        as: 'a',\r\n        href: link,\r\n        target: '_blank',\r\n        rel: 'noopener noreferrer'\r\n      }\r\n    : {\r\n        as: GLink,\r\n        to: slug\r\n      }\r\n  return (\r\n    <Heading {...linkProps} sx={{ variant: rv(variant, 'title') }}>\r\n      {title}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default CardBodyTitle\r\n","import React from 'react'\r\nimport { Text, useThemeUI, get } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst styles = {\r\n  excerpt: {\r\n    flex: `auto`,\r\n    mb: 3\r\n  }\r\n}\r\n\r\nconst CardBodyExcerpt = ({ variant, excerpt, omitExcerpt }) => {\r\n  const context = useThemeUI()\r\n\r\n  const responsiveVariant = rv(variant, 'excerpt')\r\n\r\n  const visibility = responsiveVariant.reduce(\r\n    (mobileVisibility, variant) =>\r\n      mobileVisibility === false &&\r\n      get(context.theme, variant, {}).display === 'none'\r\n        ? false\r\n        : true,\r\n    false\r\n  )\r\n\r\n  return !omitExcerpt && visibility ? (\r\n    <Text\r\n      variant='small'\r\n      sx={{\r\n        ...styles.excerpt,\r\n        variant: responsiveVariant\r\n      }}\r\n    >\r\n      {excerpt}\r\n    </Text>\r\n  ) : null\r\n}\r\n\r\nexport default CardBodyExcerpt\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport CardBodyCategory from './Card.Body.Category'\r\nimport CardBodyTitle from './Card.Body.Title'\r\nimport CardBodyExcerpt from './Card.Body.Excerpt'\r\n\r\nconst styles = {\r\n  body: {\r\n    display: `flex`,\r\n    flexDirection: `column`,\r\n    justifyContent: `center`,\r\n    flex: 1\r\n  }\r\n}\r\n\r\nconst CardBody = ({ children, omitBody, ...props }) =>\r\n  !omitBody && (\r\n    <Box\r\n      sx={{\r\n        ...styles.body,\r\n        variant: rv(props.variant, 'body')\r\n      }}\r\n    >\r\n      <CardBodyCategory {...props} />\r\n      <CardBodyTitle {...props} />\r\n      <CardBodyExcerpt {...props} />\r\n      {children}\r\n    </Box>\r\n  )\r\n\r\nexport default CardBody\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\r\nimport { Box } from 'theme-ui'\r\nimport getImageVariant from '@components/utils/getImageVariant'\r\n\r\nconst styles = {\r\n  imageWrapperSimple: {\r\n    bg: `omegaLight`,\r\n    display: `inline-block`,\r\n    verticalAlign: `middle`,\r\n    borderRadius: `full`,\r\n    borderStyle: `solid`,\r\n    borderWidth: `md`,\r\n    borderColor: `omegaLight`,\r\n    overFlow: `hidden`,\r\n    opacity: 0.9,\r\n    mr: 3,\r\n    img: {\r\n      borderRadius: `full`\r\n    },\r\n    ':hover': {\r\n      opacity: 1\r\n    },\r\n    '> div': {\r\n      borderRadius: `full`\r\n    }\r\n  }\r\n}\r\n\r\nconst AvatarSimple = ({ avatar, size, alt }) => {\r\n  const image = avatar && getImageVariant(avatar, size)\r\n\r\n  if (!image) return null\r\n\r\n  return (\r\n    <Box sx={styles.imageWrapperSimple}>\r\n      <Img image={image} alt={alt} />\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default AvatarSimple\r\n\r\nAvatarSimple.defaultProps = {\r\n  size: 'regular'\r\n}\r\n\r\nAvatarSimple.propTypes = {\r\n  size: PropTypes.oneOf([false, 'small', 'regular']),\r\n  loading: PropTypes.string,\r\n  alt: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Link, useThemeUI, get } from 'theme-ui'\r\nimport AvatarSimple from '@components/AvatarSimple'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardFooterAuthorAvatar = ({ variant, omitAuthor, author }) => {\r\n  const context = useThemeUI()\r\n\r\n  if (omitAuthor) return null\r\n\r\n  const responsiveVariant = rv(variant, 'authorPhoto')\r\n\r\n  const visibility = responsiveVariant.reduce(\r\n    (mobileVisibility, variant) =>\r\n      mobileVisibility === false &&\r\n      get(context.theme, variant, {}).display === 'none'\r\n        ? false\r\n        : true,\r\n    false\r\n  )\r\n\r\n  return visibility ? (\r\n    author && author.thumbnail ? (\r\n      <Link\r\n        as={GLink}\r\n        to={author.slug}\r\n        aria-label={author.name}\r\n        sx={{ variant: responsiveVariant }}\r\n      >\r\n        <AvatarSimple\r\n          avatar={author.thumbnail}\r\n          alt={author.name}\r\n          size='small'\r\n        />\r\n      </Link>\r\n    ) : null\r\n  ) : null\r\n}\r\nexport default CardFooterAuthorAvatar\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Text, Link } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst styles = {\r\n  author: {\r\n    pr: 2\r\n  }\r\n}\r\n\r\nconst CardFooterAuthorName = ({ variant, omitAuthor, author }) =>\r\n  !omitAuthor && author && author.slug ? (\r\n    <Text sx={{ ...styles.author, variant: rv(variant, 'author') }}>\r\n      <Link variant='mute' as={GLink} to={author.slug}>\r\n        <strong>{author.name}</strong>\r\n      </Link>\r\n    </Text>\r\n  ) : null\r\n\r\nexport default CardFooterAuthorName\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Box } from 'theme-ui'\r\n\r\nconst styles = {\r\n  wrapper: separator => ({\r\n    '> *': {\r\n      ':not(:last-child) + *:before': {\r\n        content: `\" ${separator} \"`\r\n      }\r\n    }\r\n  }),\r\n  nowrap: {\r\n    overflow: `hidden`,\r\n    textOverflow: `ellipsis`,\r\n    whiteSpace: `nowrap`\r\n  }\r\n}\r\n\r\nconst TextList = ({ nowrap, separator, children }) => (\r\n  <Box sx={{ ...(nowrap && styles.nowrap), ...styles.wrapper(separator) }}>\r\n    {children}\r\n  </Box>\r\n)\r\n\r\nexport default TextList\r\n\r\nTextList.defaultProps = {\r\n  separator: '・',\r\n  nowrap: false\r\n}\r\n\r\nTextList.propTypes = {\r\n  separator: PropTypes.string,\r\n  nowrap: PropTypes.bool\r\n}\r\n","import React from 'react'\r\nimport { Text } from 'theme-ui'\r\nimport TextList from '@components/TextList'\r\nimport { FaRegClock } from 'react-icons/fa'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardFooterInfo = ({ variant, date, timeToRead }) => (\r\n  <TextList nowrap>\r\n    {date && <Text sx={{ variant: rv(variant, 'date') }}>{date}</Text>}\r\n    {timeToRead && (\r\n      <Text sx={{ variant: rv(variant, 'timeToRead') }}>\r\n        <FaRegClock css={{ verticalAlign: `middle` }} /> {timeToRead} min\r\n      </Text>\r\n    )}\r\n  </TextList>\r\n)\r\n\r\nexport default CardFooterInfo\r\n","import React from 'react'\r\nimport { Flex } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport AuthorAvatar from './Card.Footer.Author.Avatar'\r\nimport AuthorName from './Card.Footer.Author.Name'\r\nimport Info from './Card.Footer.Info'\r\n\r\nconst styles = {\r\n  wrapper: {\r\n    alignItems: `center`\r\n  },\r\n  postInfo: {\r\n    flex: 1,\r\n    flexWrap: `wrap`,\r\n    justifyContent: `space-between`,\r\n    color: `omega`\r\n  }\r\n}\r\n\r\nconst CardFooter = ({ omitFooter, ...props }) =>\r\n  !omitFooter && (\r\n    <Flex css={styles.wrapper} sx={{ variant: rv(props.variant, 'footer') }}>\r\n      <AuthorAvatar {...props} />\r\n      <Flex sx={styles.postInfo}>\r\n        <AuthorName {...props} />\r\n        <Info {...props} />\r\n      </Flex>\r\n    </Flex>\r\n  )\r\nexport default CardFooter\r\n","import React from 'react'\r\nimport SVG from 'react-inlinesvg'\r\nimport { Flex, Box, Text, css } from 'theme-ui'\r\nimport MemphisPattern from '@components/MemphisPattern'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport getReadableColor from '@components/utils/getReadableColor'\r\n\r\nconst styles = {\r\n  iconBox: {\r\n    height: `full`\r\n  },\r\n  iconAndText: {\r\n    flexDirection: `column`,\r\n    justifyContent: `center`,\r\n    alignItems: `center`,\r\n    // color: `omegaDark`,\r\n    position: `relative`,\r\n    fontWeight: `medium`,\r\n    height: `full`,\r\n    zIndex: 2,\r\n    px: 2,\r\n    lineHeight: 1.33,\r\n    svg: {\r\n      pb: 2\r\n    }\r\n  },\r\n  pattern: {\r\n    opacity: 0.07,\r\n    borderRadius: `default`\r\n  }\r\n}\r\n\r\nconst CardMediaIcon = ({ variant, thumbnailText, category }) =>\r\n  category && category.icon && category.name ? (\r\n    <Box\r\n      bg={category.color || 'omegaDark'}\r\n      color={category.color ? getReadableColor(category.color) : '#fff'}\r\n      sx={{\r\n        ...styles.iconBox,\r\n        variant: rv(variant, 'iconBox')\r\n      }}\r\n    >\r\n      <Flex sx={styles.iconAndText}>\r\n        <SVG src={category.icon} css={css({ variant: rv(variant, 'icon') })} />\r\n        <Text sx={{ variant: rv(variant, 'iconText') }}>\r\n          {thumbnailText || category.name}\r\n        </Text>\r\n      </Flex>\r\n      <MemphisPattern sx={styles.pattern} />\r\n    </Box>\r\n  ) : null\r\n\r\nexport default CardMediaIcon\r\n","import React from 'react'\r\nimport { GatsbyImage as Img } from 'gatsby-plugin-image'\r\nimport { css } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\n\r\nconst CardMediaImage = ({ variant, loading, image, title }) => (\r\n  <Img\r\n    image={image}\r\n    loading={loading}\r\n    alt={title}\r\n    css={css({\r\n      height: `full`,\r\n      verticalAlign: `middle`, //avoid baseline gap\r\n      img: {\r\n        bg: `omegaLighter`\r\n      },\r\n      variant: rv(variant, 'image')\r\n    })}\r\n  />\r\n)\r\nCardMediaImage.defaultProps = {\r\n  loading: 'lazy'\r\n}\r\n\r\nexport default CardMediaImage\r\n","import React from 'react'\r\nimport { Link as GLink } from 'gatsby'\r\nimport { Link, useThemeUI, get } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport getImageVariant from '@components/utils/getImageVariant'\r\nimport CardMediaIcon from './Card.Media.Icon'\r\nimport CardMediaImage from './Card.Media.Image'\r\n\r\nconst DEFAULT_IMAGE_VARIANT = 'vertical'\r\n\r\nconst styles = {\r\n  link: {\r\n    userSelect: `none`,\r\n    textAlign: `center`,\r\n    position: `relative`,\r\n    display: `block`\r\n  }\r\n}\r\n\r\nconst CardMedia = ({\r\n  imageVariant,\r\n  omitMedia,\r\n  mediaType,\r\n  title,\r\n  slug,\r\n  link,\r\n  ...props\r\n}) => {\r\n  const context = useThemeUI()\r\n\r\n  if (omitMedia) return null\r\n\r\n  const { variant, thumbnail, thumbnailText } = props\r\n\r\n  const imageVar =\r\n    imageVariant ||\r\n    get(context.theme, rv(variant, 'imageVariant')[0]) ||\r\n    DEFAULT_IMAGE_VARIANT\r\n\r\n  const image = getImageVariant(thumbnail, imageVar)\r\n\r\n  const linkProps = link\r\n    ? {\r\n        as: 'a',\r\n        href: link,\r\n        target: '_blank',\r\n        rel: 'noopener noreferrer'\r\n      }\r\n    : {\r\n        as: GLink,\r\n        to: slug\r\n      }\r\n\r\n  return (\r\n    <Link\r\n      {...linkProps}\r\n      css={styles.link}\r\n      sx={{ variant: rv(variant, 'media') }}\r\n      aria-label={title}\r\n    >\r\n      {mediaType === 'image' && image && (\r\n        <CardMediaImage image={image} title={title} {...props} />\r\n      )}\r\n      {(mediaType === 'icon' || (!image && thumbnailText)) && (\r\n        <CardMediaIcon {...props} />\r\n      )}\r\n    </Link>\r\n  )\r\n}\r\n\r\nCardMedia.defaultProps = {\r\n  mediaType: 'image'\r\n}\r\n\r\nexport default CardMedia\r\n","import React from 'react'\r\nimport { Box, Card, Flex } from 'theme-ui'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport columnSizeMatcher from '@components/utils/columnSizeMatcher'\r\nimport Body from './Card.Body'\r\nimport Footer from './Card.Footer'\r\nimport Media from './Card.Media'\r\n\r\nconst styles = {\r\n  card: {\r\n    overflow: `hidden`,\r\n    height: `full`\r\n  },\r\n  content: {\r\n    alignItems: `stretch`,\r\n    height: `full`\r\n  }\r\n}\r\n\r\nconst CardBase = ({ columns, onMouseOver, ...props }) => (\r\n  <Box\r\n    className='blog_card'\r\n    sx={columnSizeMatcher(columns)}\r\n    onMouseOver={onMouseOver}\r\n    onFocus={onMouseOver}\r\n  >\r\n    <Card\r\n      variant='interactive'\r\n      sx={{\r\n        ...styles.card,\r\n        variant: rv(props.variant, 'card')\r\n      }}\r\n    >\r\n      <Flex\r\n        as='article'\r\n        sx={{\r\n          ...styles.content,\r\n          variant: rv(props.variant, 'content')\r\n        }}\r\n      >\r\n        <Media {...props} />\r\n        <Body {...props}>\r\n          <Footer {...props} />\r\n        </Body>\r\n      </Flex>\r\n    </Card>\r\n  </Box>\r\n)\r\n\r\nexport default CardBase\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport rv from '@components/utils/buildResponsiveVariant'\r\nimport Base from './Card.Base'\r\n\r\nconst Card = ({ variantGroup, variant, aside, ...props }) => {\r\n  const responsiveVariant = rv(variantGroup, variant)\r\n  return <Base variant={responsiveVariant} {...props} />\r\n}\r\n\r\nexport default Card\r\n\r\nCard.defaultProps = {\r\n  variantGroup: 'cards',\r\n  variant: 'vertical'\r\n}\r\n\r\nCard.propTypes = {\r\n  variant: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.oneOf([\r\n      'horizontal',\r\n      'horizontal-aside',\r\n      'horizontal-md',\r\n      'horizontal-lg',\r\n      'horizontal-cover',\r\n      'horizontal-cover-hero',\r\n      'horizontal-cover-wide',\r\n      'horizontal-hero',\r\n      'vertical-cover',\r\n      'vertical',\r\n      'search'\r\n    ])\r\n  ]),\r\n  omitMedia: PropTypes.bool,\r\n  omitCategory: PropTypes.bool,\r\n  omitExcerpt: PropTypes.bool,\r\n  omitAuthor: PropTypes.bool,\r\n  omitBody: PropTypes.bool,\r\n  omitFooter: PropTypes.bool,\r\n  aside: PropTypes.bool,\r\n  columns: PropTypes.array,\r\n  mediaType: PropTypes.oneOfType([\r\n    PropTypes.bool,\r\n    PropTypes.oneOf(['icon', 'image'])\r\n  ]),\r\n  imageVariant: PropTypes.string,\r\n  loading: PropTypes.oneOf(['lazy', 'auto', 'eager']),\r\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  slug: PropTypes.string,\r\n  link: PropTypes.string,\r\n  category: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    color: PropTypes.string,\r\n    slug: PropTypes.string,\r\n    icon: PropTypes.string\r\n  }),\r\n  author: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    slug: PropTypes.string,\r\n    thumbnail: PropTypes.object\r\n  }),\r\n  date: PropTypes.string,\r\n  timeToRead: PropTypes.number,\r\n  excerpt: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\r\n  thumbnail: PropTypes.object,\r\n  thumbnailText: PropTypes.string\r\n}\r\n","import React from 'react'\r\nimport { Box } from 'theme-ui'\r\nimport memphis from '../../assets/memphis.png'\r\n\r\nconst styles = {\r\n  pattern: {\r\n    size: `full`,\r\n    backgroundImage: `url(${memphis})`,\r\n    backgroundSize: `11rem`,\r\n    position: `absolute`,\r\n    opacity: 0.05,\r\n    top: 0,\r\n    left: 0\r\n  }\r\n}\r\n\r\nconst MemphisPattern = ({ sx = {}, ...props }) => (\r\n  <Box sx={{ ...styles.pattern, ...sx }} {...props}></Box>\r\n)\r\n\r\nexport default MemphisPattern\r\n"],"sourceRoot":""}